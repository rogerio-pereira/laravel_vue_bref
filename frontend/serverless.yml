useDotenv: true
service: bref-frontend

provider:
    name: aws  
    runtime: nodejs14.x
    region: us-east-1
    stage: dev

plugins:
    - serverless-s3-sync

resources:
    Resources:
        # Create our S3 storage bucket using CloudFormation
        S3StaticWebsite:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: ${env:AWS_DOMAIN} #Bucket name should be the same as your domain
                PublicAccessBlockConfiguration:
                    BlockPublicAcls: false
                OwnershipControls:
                    Rules:
                        - ObjectOwnership: ObjectWriter
                WebsiteConfiguration:
                    IndexDocument: index.html
                    ErrorDocument: index.html

        StaticSiteS3BucketPolicy:
            Type: AWS::S3::BucketPolicy
            Properties:
                Bucket:
                    Ref: S3StaticWebsite
                PolicyDocument:
                    Statement:
                        -   Sid: PublicReadGetObject
                            Effect: Allow
                            Principal: "*"
                            Action:
                                - s3:GetObject
                            Resource:
                                Fn::Join: [
                                    "", [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "S3StaticWebsite"
                                        },
                                        "/*"
                                    ]
                                ]
        
        DnsRecord:
            Type: "AWS::Route53::RecordSet"
            Properties:
                AliasTarget:
                    DNSName: ${self:custom.aliasDNSName}
                    HostedZoneId: ${self:custom.aliasHostedZoneId}
                HostedZoneName: ${self:custom.hostedZoneName}.
                Name: ${self:custom.siteName}
                Type: 'A'

    Outputs:
        S3StaticWebsiteOutputName:
            Value: !Ref S3StaticWebsite
        S3StaticWebsiteURL:
            Value:
                Fn::GetAtt: ["S3StaticWebsite", "WebsiteURL"]

custom:
    siteName: ${env:AWS_DOMAIN}         #a record should include top level domain
    hostedZoneName: ${env:AWS_HOST}     #top level domain, where the A record will be added
    aliasHostedZoneId: Z3AQBSTGFYJSTF   # us-east-1
    # aliasDNSName: d1gxuk427b4kll.cloudfront.net
    aliasDNSName: s3-website-us-east-1.amazonaws.com
    s3Sync:
        -   bucketName: ${env:AWS_DOMAIN}
            localDir: dist
            acl: public-read
            defaultContentType: text/html
            params:
                -   index.html:
                    CacheControl: 'no-cache'
                -   "*.js":
                    CacheControl: 'public, max-age=31536000'